{
  "version": 3,
  "sources": ["../../mithril-stream/stream.mjs", "dep:mithril-stream"],
  "sourcesContent": ["/* eslint-enable */\nStream.SKIP = {}\nStream.lift = lift\nStream.scan = scan\nStream.merge = merge\nStream.combine = combine\nStream.scanMerge = scanMerge\nStream[\"fantasy-land/of\"] = Stream\n\nvar warnedHalt = false\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true\n\t\treturn Stream.SKIP\n\t}\n})\n\nfunction Stream(value) {\n\tvar dependentStreams = []\n\tvar dependentFns = []\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v\n\t\t\tif (open(stream)) {\n\t\t\t\tstream.changing()\n\t\t\t\tstream.state = \"active\"\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)) })\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream\n\tstream.state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\"\n\tstream.parents = []\n\n\tstream.changing = function() {\n\t\topen(stream) && (stream.state = \"changing\")\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts.changing()\n\t\t})\n\t}\n\n\tstream.map = function(fn, ignoreInitial) {\n\t\tvar target = stream.state === \"active\" && ignoreInitial !== Stream.SKIP\n\t\t\t? Stream(fn(value))\n\t\t\t: Stream()\n\t\ttarget.parents.push(stream)\n\n\t\tdependentStreams.push(target)\n\t\tdependentFns.push(fn)\n\t\treturn target\n\t}\n\n\tvar end\n\tfunction createEnd() {\n\t\tend = Stream()\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream.parents.forEach(function (p) {p.unregisterChild(stream)})\n\t\t\t\tstream.state = \"ended\"\n\t\t\t\tstream.parents.length = dependentStreams.length = dependentFns.length = 0\n\t\t\t}\n\t\t\treturn value\n\t\t})\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value }\n\n\tstream[\"fantasy-land/map\"] = stream.map\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) }\n\n\tstream.unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child)\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1)\n\t\t\tdependentFns.splice(childIndex, 1)\n\t\t}\n\t}\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t})\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s.state === \"active\"\n\t})\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream()\n\n\tvar changed = []\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s.map(function(value) {\n\t\t\tchanged.push(s)\n\t\t\tif (ready || streams.every(function(s) { return s.state !== \"pending\" })) {\n\t\t\t\tready = true\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])))\n\t\t\t\tchanged = []\n\t\t\t}\n\t\t\treturn value\n\t\t}, Stream.SKIP)\n\t})\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true) })\n\t\t\tendStream.end(true)\n\t\t}\n\t\treturn undefined\n\t})\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v)\n\t\tif (next !== Stream.SKIP) acc = next\n\t\treturn next\n\t})\n\tstream(acc)\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] })\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1]\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream())\n\t\t})\n\n\t\treturn seed\n\t}, streams)\n\n\tstream(seed)\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0]\n\tvar streams = Array.prototype.slice.call(arguments, 1)\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s.state === \"pending\" || s.state === \"active\" || s.state === \"changing\"\n}\n\n\nexport default Stream", "import d from \"./node_modules/mithril-stream/stream.mjs\";export default d;"],
  "mappings": ";;;AACA,OAAO,OAAO,CAAC;AACf,OAAO,OAAO;AACd,OAAO,OAAO;AACd,OAAO,QAAQ;AACf,OAAO,UAAU;AACjB,OAAO,YAAY;AACnB,OAAO,qBAAqB;AAE5B,IAAI,aAAa;AACjB,OAAO,eAAe,QAAQ,QAAQ;AAAA,EACrC,KAAK,WAAW;AACf,kBAAc,QAAQ,IAAI,iDAAiD;AAC3E,iBAAa;AACb,WAAO,OAAO;AAAA,EACf;AACD,CAAC;AAED,SAAS,OAAO,OAAO;AACtB,MAAI,mBAAmB,CAAC;AACxB,MAAI,eAAe,CAAC;AAEpB,WAAS,OAAO,GAAG;AAClB,QAAI,UAAU,UAAU,MAAM,OAAO,MAAM;AAC1C,cAAQ;AACR,UAAI,KAAK,MAAM,GAAG;AACjB,eAAO,SAAS;AAChB,eAAO,QAAQ;AACf,yBAAiB,QAAQ,SAAS,GAAG,GAAG;AAAE,YAAE,aAAa,GAAG,KAAK,CAAC;AAAA,QAAE,CAAC;AAAA,MACtE;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAEA,SAAO,cAAc;AACrB,SAAO,QAAQ,UAAU,UAAU,UAAU,OAAO,OAAO,WAAW;AACtE,SAAO,UAAU,CAAC;AAElB,SAAO,WAAW,WAAW;AAC5B,SAAK,MAAM,MAAM,OAAO,QAAQ;AAChC,qBAAiB,QAAQ,SAAS,GAAG;AACpC,QAAE,SAAS;AAAA,IACZ,CAAC;AAAA,EACF;AAEA,SAAO,MAAM,SAAS,IAAI,eAAe;AACxC,QAAI,SAAS,OAAO,UAAU,YAAY,kBAAkB,OAAO,OAChE,OAAO,GAAG,KAAK,CAAC,IAChB,OAAO;AACV,WAAO,QAAQ,KAAK,MAAM;AAE1B,qBAAiB,KAAK,MAAM;AAC5B,iBAAa,KAAK,EAAE;AACpB,WAAO;AAAA,EACR;AAEA,MAAI;AACJ,WAAS,YAAY;AACpB,UAAM,OAAO;AACb,QAAI,IAAI,SAASA,QAAO;AACvB,UAAIA,WAAU,MAAM;AACnB,eAAO,QAAQ,QAAQ,SAAU,GAAG;AAAC,YAAE,gBAAgB,MAAM;AAAA,QAAC,CAAC;AAC/D,eAAO,QAAQ;AACf,eAAO,QAAQ,SAAS,iBAAiB,SAAS,aAAa,SAAS;AAAA,MACzE;AACA,aAAOA;AAAA,IACR,CAAC;AACD,WAAO;AAAA,EACR;AAEA,SAAO,SAAS,WAAW;AAAE,WAAO,SAAS,QAAQ,OAAO,MAAM,WAAW,aAAa,MAAM,OAAO,IAAI;AAAA,EAAM;AAEjH,SAAO,sBAAsB,OAAO;AACpC,SAAO,qBAAqB,SAAS,GAAG;AAAE,WAAO,QAAQ,SAAS,IAAI,IAAI;AAAE,aAAO,GAAG,EAAE,GAAG,CAAC;AAAA,IAAE,GAAG,CAAC,GAAG,MAAM,CAAC;AAAA,EAAE;AAE9G,SAAO,kBAAkB,SAAS,OAAO;AACxC,QAAI,aAAa,iBAAiB,QAAQ,KAAK;AAC/C,QAAI,eAAe,IAAI;AACtB,uBAAiB,OAAO,YAAY,CAAC;AACrC,mBAAa,OAAO,YAAY,CAAC;AAAA,IAClC;AAAA,EACD;AAEA,SAAO,eAAe,QAAQ,OAAO;AAAA,IACpC,KAAK,WAAW;AAAE,aAAO,OAAO,UAAU;AAAA,IAAE;AAAA,EAC7C,CAAC;AAED,SAAO;AACR;AAEA,SAAS,QAAQ,IAAI,SAAS;AAC7B,MAAI,QAAQ,QAAQ,MAAM,SAAS,GAAG;AACrC,QAAI,EAAE,gBAAgB;AACrB,YAAM,IAAI,MAAM,8EAA8E;AAC/F,WAAO,EAAE,UAAU;AAAA,EACpB,CAAC;AACD,MAAI,SAAS,QACV,OAAO,GAAG,MAAM,MAAM,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAChD,OAAO;AAEV,MAAI,UAAU,CAAC;AAEf,MAAI,UAAU,QAAQ,IAAI,SAAS,GAAG;AACrC,WAAO,EAAE,IAAI,SAAS,OAAO;AAC5B,cAAQ,KAAK,CAAC;AACd,UAAI,SAAS,QAAQ,MAAM,SAASC,IAAG;AAAE,eAAOA,GAAE,UAAU;AAAA,MAAU,CAAC,GAAG;AACzE,gBAAQ;AACR,eAAO,GAAG,MAAM,MAAM,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AAChD,kBAAU,CAAC;AAAA,MACZ;AACA,aAAO;AAAA,IACR,GAAG,OAAO,IAAI;AAAA,EACf,CAAC;AAED,MAAI,YAAY,OAAO,IAAI,IAAI,SAAS,OAAO;AAC9C,QAAI,UAAU,MAAM;AACnB,cAAQ,QAAQ,SAAS,QAAQ;AAAE,eAAO,IAAI,IAAI;AAAA,MAAE,CAAC;AACrD,gBAAU,IAAI,IAAI;AAAA,IACnB;AACA,WAAO;AAAA,EACR,CAAC;AAED,SAAO;AACR;AAEA,SAAS,MAAM,SAAS;AACvB,SAAO,QAAQ,WAAW;AAAE,WAAO,QAAQ,IAAI,SAAS,GAAG;AAAE,aAAO,EAAE;AAAA,IAAE,CAAC;AAAA,EAAE,GAAG,OAAO;AACtF;AAEA,SAAS,KAAK,IAAI,KAAK,QAAQ;AAC9B,MAAI,SAAS,OAAO,IAAI,SAAS,GAAG;AACnC,QAAI,OAAO,GAAG,KAAK,CAAC;AACpB,QAAI,SAAS,OAAO;AAAM,YAAM;AAChC,WAAO;AAAA,EACR,CAAC;AACD,SAAO,GAAG;AACV,SAAO;AACR;AAEA,SAAS,UAAU,QAAQ,MAAM;AAChC,MAAI,UAAU,OAAO,IAAI,SAAS,OAAO;AAAE,WAAO,MAAM;AAAA,EAAG,CAAC;AAE5D,MAAI,SAAS,QAAQ,WAAW;AAC/B,QAAI,UAAU,UAAU,UAAU,SAAS;AAC3C,YAAQ,QAAQ,SAASC,SAAQ,GAAG;AACnC,UAAI,QAAQ,QAAQA,OAAM,IAAI;AAC7B,eAAO,OAAO,GAAG,GAAG,MAAMA,QAAO,CAAC;AAAA,IACpC,CAAC;AAED,WAAO;AAAA,EACR,GAAG,OAAO;AAEV,SAAO,IAAI;AAEX,SAAO;AACR;AAEA,SAAS,OAAO;AACf,MAAI,KAAK,UAAU;AACnB,MAAI,UAAU,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AACrD,SAAO,MAAM,OAAO,EAAE,IAAI,SAASC,UAAS;AAC3C,WAAO,GAAG,MAAM,QAAWA,QAAO;AAAA,EACnC,CAAC;AACF;AAEA,SAAS,KAAK,GAAG;AAChB,SAAO,EAAE,UAAU,aAAa,EAAE,UAAU,YAAY,EAAE,UAAU;AACrE;AAGA,IAAO,iBAAQ;;;AC3K0C,IAAO,yBAAQ;",
  "names": ["value", "s", "stream", "streams"]
}
